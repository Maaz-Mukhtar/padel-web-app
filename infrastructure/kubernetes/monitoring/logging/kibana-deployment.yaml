apiVersion: v1
kind: Service
metadata:
  name: kibana-service
  namespace: padel-platform-dev
  labels:
    app.kubernetes.io/name: kibana
    app.kubernetes.io/component: logging
spec:
  type: ClusterIP
  ports:
  - name: kibana
    port: 5601
    targetPort: 5601
  selector:
    app.kubernetes.io/name: kibana
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kibana
  namespace: padel-platform-dev
  labels:
    app.kubernetes.io/name: kibana
    app.kubernetes.io/component: logging
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kibana
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kibana
        app.kubernetes.io/component: logging
    spec:
      containers:
      - name: kibana
        image: docker.elastic.co/kibana/kibana:8.11.0
        ports:
        - name: kibana
          containerPort: 5601
        env:
        - name: ELASTICSEARCH_HOSTS
          value: "http://elasticsearch-service:9200"
        - name: SERVER_NAME
          value: "kibana-dev.padelplatform.local"
        - name: SERVER_BASEPATH
          value: ""
        - name: XPACK_SECURITY_ENABLED
          value: "false"
        - name: XPACK_MONITORING_ENABLED
          value: "false"
        - name: TELEMETRY_ENABLED
          value: "false"
        - name: LOGGING_ROOT_LEVEL
          value: "warn"
        volumeMounts:
        - name: kibana-config
          mountPath: /usr/share/kibana/config/kibana.yml
          subPath: kibana.yml
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /api/status
            port: 5601
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/status
            port: 5601
          initialDelaySeconds: 30
          periodSeconds: 5
          timeoutSeconds: 5
          failureThreshold: 3
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      volumes:
      - name: kibana-config
        configMap:
          name: kibana-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kibana-config
  namespace: padel-platform-dev
  labels:
    app.kubernetes.io/name: kibana
    app.kubernetes.io/component: logging
data:
  kibana.yml: |
    server.name: kibana
    server.host: 0.0.0.0
    server.port: 5601
    server.publicBaseUrl: "http://kibana-dev.padelplatform.local"
    
    elasticsearch.hosts: ["http://elasticsearch-service:9200"]
    elasticsearch.pingTimeout: 1500
    elasticsearch.requestTimeout: 30000
    elasticsearch.shardTimeout: 30000
    
    # Disable security features for development
    xpack.security.enabled: false
    xpack.monitoring.enabled: false
    telemetry.enabled: false
    
    # Logging configuration
    logging.root.level: warn
    logging.loggers:
      - name: elasticsearch
        level: warn
      - name: http.server.response
        level: warn
    
    # Performance settings
    data.search.timeout: 30000
    
    # Default index pattern
    kibana.defaultAppId: "discover"
    
    # Save objects
    savedObjects.maxImportPayloadBytes: 26214400
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: kibana-ingress
  namespace: padel-platform-dev
  labels:
    app.kubernetes.io/name: kibana
    app.kubernetes.io/component: logging
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
spec:
  ingressClassName: nginx
  rules:
  - host: kibana-dev.padelplatform.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: kibana-service
            port:
              number: 5601